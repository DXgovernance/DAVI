// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CallDetails Should match 1`] = `
.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  cursor: pointer;
  font-size: 14px;
  border: 1px solid #303338;
  background-color: transparent;
  color: #fff;
  border-radius: 32px;
  padding: 0.5rem 0.8rem;
  margin: 0.2rem;
  width: auto;
}

.c0:disabled {
  color: initial;
  opacity: 0.4;
  cursor: auto;
}

.c0:hover:enabled {
  border-color: #fff;
}

.c0:active:enabled {
  border: 1px solid #303338;
}

.c0:disabled {
  color: #303338;
}

.c2 {
  padding: 0.125rem 0.375rem;
  background-color: #303338;
  border-radius: 10px;
}

.c3 {
  margin: 0;
  padding: 0;
  color: #fff;
  background-color: transparent;
}

.c1 {
  font-size: 12px;
  margin: 0;
  padding: 4px 8px;
}

<div>
   
  <button
    class="c0 c1"
  >
    transfer
     (
    <span>
      <span
        class="c2 c3"
        color="#fff"
      >
        address
      </span>
    </span>
    <span>
      <span>
        , 
      </span>
      <span
        class="c2 c3"
        color="#fff"
      >
        uint256
      </span>
    </span>
    )
  </button>
   
</div>
`;

exports[`CallDetails Should match with empty data 1`] = `
.c12 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  cursor: pointer;
  font-size: 14px;
  border: 1px solid #303338;
  background-color: transparent;
  color: #fff;
  border-radius: 32px;
  padding: 0.5rem 0.8rem;
  margin: 0.2rem;
  width: auto;
}

.c12:disabled {
  color: initial;
  opacity: 0.4;
  cursor: auto;
}

.c12:hover:enabled {
  border-color: #fff;
}

.c12:active:enabled {
  border: 1px solid #303338;
}

.c12:disabled {
  color: #303338;
}

.c0 {
  box-sizing: 'border-box';
  min-width: 0;
  margin: 0;
  padding: 0;
}

.c8 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
}

.c8:focus,
.c8:hover,
.c8:visited,
.c8:link,
.c8:active {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c11 {
  width: 100%;
  min-width: 200px;
  height: 1px;
  background-color: #303338;
}

.c2 {
  padding: 0.125rem 0.375rem;
  background-color: #303338;
  border-radius: 10px;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  margin: 0;
  padding: 0;
  color: #9575CD;
  background-color: transparent;
}

.c4 {
  margin: 0;
  padding: 0;
  color: #F06292;
  background-color: transparent;
}

.c14 {
  margin: 0;
  padding: 0;
  color: #fff;
  background-color: transparent;
}

.c6 {
  margin-bottom: 0.75rem;
}

.c7 {
  display: inline-block;
  padding: 0.375rem 0.5rem;
  color: #9575CD;
}

.c10 {
  display: inline-block;
  padding: 0.375rem 0.5rem;
  color: #F06292;
}

.c1 {
  margin-top: 20px;
}

.c9 {
  color: #A1A6B0;
  overflow-wrap: break-word;
}

.c13 {
  font-size: 12px;
  margin: 0;
  padding: 4px 8px;
}

<div>
   
  <div
    class="c0 c1"
  >
    <div
      class="c0"
    >
      approve (
       
      <span
        class="c2 c3"
        color="#9575CD"
      >
        address
      </span>
      , 
      <span
        class="c2 c4"
        color="#F06292"
      >
        uint256
      </span>
       )
    </div>
  </div>
  <div
    class="c0 c1"
  >
    <div
      class="c0 c5 c6"
    >
      <span
        class="c2 c7"
        color="#9575CD"
      >
        spender 
        <em>
          (address)
        </em>
      </span>
    </div>
    <a
      class="c8"
      href="/"
    >
      <div
        class="c0 c9"
      >
        0x0000000000000000000000000000000000000000
         
        <svg
          fill="none"
          height="16"
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          viewBox="0 0 24 24"
          width="16"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
          />
          <polyline
            points="15 3 21 3 21 9"
          />
          <line
            x1="10"
            x2="21"
            y1="14"
            y2="3"
          />
        </svg>
      </div>
    </a>
  </div>
  <div
    class="c0 c1"
  >
    <div
      class="c0 c5 c6"
    >
      <span
        class="c2 c10"
        color="#F06292"
      >
        amount 
        <em>
          (uint256)
        </em>
      </span>
    </div>
    <div
      class="c0 c9"
    >
      1000
    </div>
  </div>
  <div
    class="c11"
    style="margin-bottom: 2rem;"
  />
  <button
    class="c12 c13"
  >
    transfer
     (
    <span>
      <span
        class="c2 c14"
        color="#fff"
      >
        address
      </span>
    </span>
    <span>
      <span>
        , 
      </span>
      <span
        class="c2 c14"
        color="#fff"
      >
        uint256
      </span>
    </span>
    )
  </button>
   
</div>
`;
